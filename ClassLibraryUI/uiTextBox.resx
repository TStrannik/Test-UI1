<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEye.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>